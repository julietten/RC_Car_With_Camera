#include <SPI.h>
#include <RH_ASK.h>

//defines digital input pins
#define jb 17 //joystick button
#define b1 5 //button 1
#define b2 6 //button 2
#define s1 3 //switch 1
#define s2 4 //switch 2

RH_ASK driver(2000,A3,11,A1,false); //initializes radio/transmitter object
uint8_t jpotx = 0; //stores analog input x value of joystick
uint8_t jpoty = 0; //stores analog input y value of joystick
uint8_t jbutton = 0; //stores digital input of joystick button
uint8_t button1 = 0; //stores digital input of button 1
uint8_t button2 = 0; //stores digital input of button 2
uint8_t switch1 = 0; //stores digital input of switch 1
uint8_t switch2 = 0; //stores digital input of switch 2

void defaultData(){ //function that stores neutral values of each input
	jpotx = 127; //sets x movement of joystick to neutral, values range from 0 to 255
	jpoty = 127; //sets y movement of joystick to neutral, values range from 0 to 255
	jbutton = 1; //sets joystick button to neutral, 1 because it has pullup resistors set in controller
	button1 = 1; //sets button 1 to neutral, 1 because it has pullup resistors set in controller
	button2 = 1; //sets button 2 to neutral, 1 because it has pullup resistors set in controller
	switch1 = 1; //sets switch 1 to neutral, 1 because it has pullup resistors set in controller
	switch2 = 1; //sets switch 2 to neutral, 1 because it has pullup resistors set in controller
}

void setup(){ //function that sets up controller inputs, transmitter, and sets default values to all inputs
	//lines 32-36 sets arduino internal pull-up resistors for all inputs
	pinMode(jb, INPUT_PULLUP);
	pinMode(b1, INPUT_PULLUP);
	pinMode(b2, INPUT_PULLUP);
	pinMode(s1, INPUT_PULLUP);
	pinMode(s2, INPUT_PULLUP);
	driver.init(); //initializes radiohead library
	defaultData(); //resets button values to default
	Serial.begin(9600);
	 if (!driver.init())
         Serial.println("init failed");
}

void loop(){
	const char *msg = "Hello World!";
    driver.send((uint8_t *)msg, strlen(msg));
    driver.waitPacketSent();
    delay(1000);

	jpotx = map(analogRead(A0), 0, 1023, 0, 255); //stores x value of joystick as 8 bits (mapped from 10)
	jpoty = map(analogRead(A2), 0, 1023, 0, 255); //stores y value of joystick as 8 bits (mapped from 10)
	
	jbutton = digitalRead(jb); //stores digital value of the joystick button
	button1 = digitalRead(b1); //stores digital value of button 1
	button2 = digitalRead(b2); //stores digital value of button 2
	switch1 = digitalRead(s1); //stores digital value of switch 1
	switch2 = digitalRead(s2); //stores digital value of switch 2

	//stores all buttons and analog inputs on controller in a 7 byte array
	uint8_t dataArray[] = {jpotx, jpoty, jbutton, button1, button2, switch1, switch2};
	const uint8_t *data = dataArray; //stores address of dataArray
	driver.send((uint8_t *)data, 7); //sends signals containing 7 byte array to receiver
	driver.waitPacketSent(); //sends signal
}